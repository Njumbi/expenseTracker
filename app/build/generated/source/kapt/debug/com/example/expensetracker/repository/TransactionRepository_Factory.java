// Generated by Dagger (https://dagger.dev).
package com.example.expensetracker.repository;

import com.example.expensetracker.data.TransactionDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TransactionRepository_Factory implements Factory<TransactionRepository> {
  private final Provider<TransactionDao> transactionsDaoProvider;

  public TransactionRepository_Factory(Provider<TransactionDao> transactionsDaoProvider) {
    this.transactionsDaoProvider = transactionsDaoProvider;
  }

  @Override
  public TransactionRepository get() {
    return newInstance(transactionsDaoProvider.get());
  }

  public static TransactionRepository_Factory create(
      Provider<TransactionDao> transactionsDaoProvider) {
    return new TransactionRepository_Factory(transactionsDaoProvider);
  }

  public static TransactionRepository newInstance(TransactionDao transactionsDao) {
    return new TransactionRepository(transactionsDao);
  }
}
