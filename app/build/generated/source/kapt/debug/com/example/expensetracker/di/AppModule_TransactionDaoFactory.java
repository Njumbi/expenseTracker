// Generated by Dagger (https://dagger.dev).
package com.example.expensetracker.di;

import com.example.expensetracker.data.AppDatabase;
import com.example.expensetracker.data.TransactionDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_TransactionDaoFactory implements Factory<TransactionDao> {
  private final Provider<AppDatabase> dbProvider;

  public AppModule_TransactionDaoFactory(Provider<AppDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public TransactionDao get() {
    return transactionDao(dbProvider.get());
  }

  public static AppModule_TransactionDaoFactory create(Provider<AppDatabase> dbProvider) {
    return new AppModule_TransactionDaoFactory(dbProvider);
  }

  public static TransactionDao transactionDao(AppDatabase db) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.transactionDao(db));
  }
}
